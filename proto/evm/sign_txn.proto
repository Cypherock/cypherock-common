syntax = "proto3";

import "common.proto";
import "error.proto";

import "evm/common.proto";

package evm;

/**
 * Example:
 *
 *        Host                       Device
 *
 * SignTxnInitiateRequest  => 
 *                         <= SignTxnDataRequest
 * SignTxnDataResponse   =>
 *                         <= SignTxnDataRequest
 * SignTxnDataResponse   =>
 *
 * **** Device has all transaction information ****
 *
 *                         <= SignTxnSignatureResponse
 */
enum SignTxnStatus {
  SIGN_TXN_STATUS_INIT = 0;
  SIGN_TXN_STATUS_CONFIRM = 1;
  SIGN_TXN_STATUS_VERIFY = 2;
  SIGN_TXN_STATUS_SEED_GENERATED = 3;
}

message SignTxnInitiateRequest {
  bytes walletId = 1;
  repeated uint32 derivationPath = 2;
  bytes chain_id = 3;
  AddressFormat address_format = 4;
}

message SignTxnDataResponse {
  common.ChunkPayload chunk_payload = 1;
}

message SignTxnDataRequest {
  common.ChunkAck chunk_ack = 1;
}

message SignTxnSignatureResponse {
  bytes r = 1;
  bytes s = 2;
  bytes v = 3;
}

message SignTxnRequest {
  oneof request {
    SignTxnInitiateRequest initiate = 1;
    SignTxnDataResponse txn_data = 2;
  }
}

message SignTxnResponse {
  oneof response {
    SignTxnDataRequest txn_data = 1;
    SignTxnSignatureResponse signature = 2;

    error.CommonError common_error = 3;
  }
}
