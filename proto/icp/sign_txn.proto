syntax = "proto3";

import "error.proto";

package icp;

/**
 * Example:
 *
 *        Host                       Device
 *
 * SignTxnInitiateRequest  =>
 *                         <= SignTxnConfirmationResponse
 * SignTxnData             =>
 *                         <= SignTxnDataAccepted
 *                        ....
 * SignTxnData             =>
 *                         <= SignTxnDataAccepted
 *
 * **** Device has all transaction information ****
 *
 * SignTxnSignatureRequest =>
 *                         <= SignTxnSignatureResponse
 */
enum SignTxnStatus {
  SIGN_TXN_STATUS_INIT = 0;
  SIGN_TXN_STATUS_CONFIRM = 1;
  SIGN_TXN_STATUS_VERIFY = 2;
  SIGN_TXN_STATUS_SEED_GENERATED = 3;
}

message SignTxnInitiateRequest {
  bytes wallet_id = 1;
  repeated uint32 derivation_path = 2;
}

message TransferRequest {
  bytes request_type = 1;
  bytes canister_id = 2;
  bytes method_name = 3;
  bytes arg = 4;
  bytes sender = 5;
  bytes ingress_expiry = 6;
  bytes nonce = 7;
}

message SignTxnConfirmationResponse {
}

message SignTxnData {
  TransferRequest icp_transfer_req = 1;
}

message SignTxnDataAccepted {
}

message SignTxnSignatureResponse {
  bytes transfer_req_signature = 1;
  bytes read_state_req_signature = 2;
}

message SignTxnSignatureRequest {
}

message SignTxnRequest {
  oneof request {
    SignTxnInitiateRequest initiate = 1;
    SignTxnData txn_data = 2;
    SignTxnSignatureRequest signature = 3;
  }
}

message SignTxnResponse {
  oneof response {
    SignTxnConfirmationResponse confirmation = 1;
    SignTxnDataAccepted data_accepted = 2;
    SignTxnSignatureResponse signature = 4;

    error.CommonError common_error = 5;
  }
}
